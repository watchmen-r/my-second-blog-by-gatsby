{"componentChunkName":"component---src-pages-blog-post-tsx","path":"/005_shader-each-matrix-means/","result":{"data":{"site":{"siteMetadata":{"title":"Oda's web memo"}},"markdownRemark":{"id":"99657fcf-7c45-53a2-838b-2a16ad084a78","excerpt":"Recently, I started learning three.js and am currently studying shaders. There are two types of shaders vertex shaders and fragment shaders. In the vertex…","html":"<p>Recently, I started learning three.js and am currently studying shaders. There are two types of shaders vertex shaders and fragment shaders. In the vertex shader, there are three matrices used for calculations, but it's difficult to understand what each matrix represents. I want to summarize them.</p>\n<h1>3 matrices</h1>\n<p>We always find these 3 matrices.</p>\n<ul>\n<li>modelMatrix</li>\n<li>viewMatrix</li>\n<li>projectionMatrix</li>\n</ul>\n<h1>Example code</h1>\n<p>I think these 3 matrices are used anytime in vertex shader. The example of code is like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec2</span> uFrequency<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> uTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">vec2</span> vUv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">varying</span> <span class=\"token keyword\">float</span> vElevation<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">vec4</span> modelPosition <span class=\"token operator\">=</span> modelMatrix <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">float</span> elevation <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>modelPosition<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> uFrequency<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> uTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n  elevation <span class=\"token operator\">+=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>modelPosition<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> uFrequency<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> uTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n\n  modelPosition<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+=</span> elevation<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">vec4</span> viewPosition <span class=\"token operator\">=</span> viewMatrix <span class=\"token operator\">*</span> modelPosition<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">vec4</span> projectionPosition <span class=\"token operator\">=</span> projectionMatrix <span class=\"token operator\">*</span> viewPosition<span class=\"token punctuation\">;</span>\n\n  gl_Position <span class=\"token operator\">=</span> projectionPosition<span class=\"token punctuation\">;</span>\n\n  vUv <span class=\"token operator\">=</span> uv<span class=\"token punctuation\">;</span>\n  vElevation <span class=\"token operator\">=</span> elevation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>modelMatrix</h1>\n<p>This matrix transforms the position of an object from its local coordinate system (the object’s own space) to the world coordinate system. For example, if you have a 3D object, the modelMatrix determines where this object is placed and how it is rotated or scaled in the world.</p>\n<h1>viewMatrix</h1>\n<p>This matrix moves the entire world so that the camera appears to be looking at it from a specific angle and distance. Essentially, it transforms positions from world space to camera space (the space as seen from the camera’s point of view).</p>\n<h1>projectionMatrix</h1>\n<p>This matrix is used to simulate perspective. It projects the 3D positions onto the 2D screen, adjusting for things like depth (how far away objects are). For example, objects that are farther away appear smaller on the screen.</p>\n<h1>conclusion</h1>\n<p>So, in the shader code, the position of a vertex is transformed step by step from its local object space to world space (using the modelMatrix), then to camera space (using the viewMatrix), and finally onto the 2D screen (using the projectionMatrix).</p>","frontmatter":{"title":"What each matrix means in vertex shader.","date":"September 08, 2024","description":"Recently, I started learning three.js and am currently studying shaders. There are two types of shaders, vertex shaders and fragment shaders. In the vertex shader, there are three matrices used for calculations, but it's difficult to understand what each matrix represents. I want to summarize them."}},"previous":{"fields":{"slug":"/004_event-loop/"},"frontmatter":{"title":"Event loop promise chain book summary"}},"next":{"fields":{"slug":"/006_3d-html-shift-problem/"},"frontmatter":{"title":"Found a problem of shift the iframe or img tag in html component of drei."}}},"pageContext":{"id":"99657fcf-7c45-53a2-838b-2a16ad084a78","previousPostId":"f8dbba3e-e9be-50a1-8d27-c65a8a9a5a47","nextPostId":"9165a2e5-0371-56f5-8480-407bf83e526c"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}