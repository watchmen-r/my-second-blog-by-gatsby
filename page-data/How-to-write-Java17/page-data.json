{"componentChunkName":"component---src-templates-blog-post-js","path":"/How-to-write-Java17/","result":{"data":{"site":{"siteMetadata":{"title":"Oda's web memo"}},"markdownRemark":{"id":"1a3400b6-53b9-558f-9f41-65dc9d7e1ce9","excerpt":"Unfortunately, there is a few valuable info for new Java in Japanese. So sometimes I confused how to write the Java considering what is the modern writing. Soâ€¦","html":"<p>Unfortunately, there is a few valuable info for new Java in Japanese. So sometimes I confused how to write the Java considering what is the modern writing. So not to confuse, I will write this article.</p>\n<h2>Create a list</h2>\n<p>In old version, we have to instantiate a list and add value, or generate list from an array.\nThis is an example of old writing.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// old version</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In Java17, we can create list like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// new version</span>\n<span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Create a list from stream</h2>\n<p>In old version, we have to use 'Collectors.toList()' to generate a list from stream like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// old version</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> someList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">tolist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But in Java17, we don't need to use 'Collectors.toList' and we can generate only use 'toList()' like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// new version</span>\n<span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> someList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Text block</h2>\n<p>In old version, to write sentences using new line, we have to write like this. It is inconvinience compared to other programing languages.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// old version</span>\n<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"blabla \\n\"</span>\n        <span class=\"token operator\">+</span> <span class=\"token string\">\"new line1 \\n\"</span>\n        <span class=\"token operator\">+</span> <span class=\"token string\">\"new line2\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But in Java17, we can write like this. It is called 'Text Block'.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// new version</span>\n<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> \n    ```\n    blabla\n        <span class=\"token keyword\">new</span> line1 <span class=\"token keyword\">with</span> <span class=\"token namespace\">an</span> indent\n        <span class=\"token keyword\">new</span> line2 <span class=\"token keyword\">with</span> <span class=\"token namespace\">an</span> indent\n    ```</code></pre></div>","frontmatter":{"title":"How to write Java 17.","date":"November 22, 2023","description":"Unfortunately, there is a few valuable info for new Java in Japanese. So sometimes I confused how to write the Java considering what is the modern writing. So not to confuse, I will write this article."}},"previous":{"fields":{"slug":"/Get-method-too-large/"},"frontmatter":{"title":"Met header is too large when using GET method with the long parameter."}},"next":null},"pageContext":{"id":"1a3400b6-53b9-558f-9f41-65dc9d7e1ce9","previousPostId":"71f2cf2d-d59c-537c-80dc-8c1b377fa51a","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}