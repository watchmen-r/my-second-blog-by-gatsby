{"version":3,"file":"component---src-pages-index-tsx-192f8dd5e382fe314014.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/FooterBar.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/seo.tsx","webpack://gatsby-starter-blog/./src/templates/blog-list-template.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport BlogList from \"../templates/blog-list-template\"\nimport Seo from \"./pageComponent/seo\"\n\nconst IndexPage = (props: any):JSX.Element => {\n  return <BlogList {...props} />\n}\n\nexport default IndexPage\n\nexport const Head = ():JSX.Element => <Seo title=\"Home\" />\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }, limit: 6, skip: 0) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst FooterBar = (): JSX.Element  => {\n  return (\n    <Box\n      component=\"footer\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 2,\n        backgroundColor: 'white',\n        color: 'black',\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n      }}\n    >\n      <Typography variant=\"body1\">\n        © {new Date().getFullYear()} createdby oda\n      </Typography>\n    </Box>\n  );\n};\n\nexport default FooterBar;\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// Define the types for the props\ninterface SeoProps {\n  description?: string\n  title: string\n  children?: React.ReactNode\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport { Box, Card, CardActionArea, CardContent, Container, Grid, Typography } from '@mui/material';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Bio from '../pages/pageComponent/bio';\nimport FooterBar from '../pages/pageComponent/FooterBar';\nimport HeaderBar from '../pages/pageComponent/HeaderBar';\nimport Seo from '../pages/pageComponent/seo';\n\nconst truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  return text.substring(0, maxLength) + '...';\n};\n\nconst BlogList = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const { currentPage, numPages } = pageContext;\n  const currentPageConverted = !currentPage ? 1 : currentPage\n  const isFirst = currentPageConverted === 1;\n  const isLast = currentPageConverted === numPages;\n  const prevPage = currentPageConverted - 1 === 1 ? '/' : `/page/${currentPageConverted - 1}`;\n  const nextPage = `/page/${currentPageConverted + 1}`;\n\n  return (\n    <>\n      <HeaderBar />\n      <Container maxWidth=\"lg\" sx={{ pb: 10 }}>\n        <Grid container spacing={3}>\n          <Grid item md={8} mt={10}>\n            <Grid container spacing={3}>\n              {posts.map((post: any) => {\n                const title = truncateText(post.frontmatter.title || post.fields.slug, 30);\n                const description = truncateText(post.frontmatter.description || post.excerpt, 130);\n                const image = getImage(post.frontmatter.featuredImage);\n                return (\n                  <Grid item xs={12} sm={6} key={post.fields.slug}>\n                    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                      <CardActionArea component={Link} to={post.fields.slug}>\n                        {image && (\n                          <GatsbyImage image={image} alt={post.frontmatter.title} style={{ maxHeight: 200 }} />\n                        )}\n                        <CardContent>\n                          <Typography variant=\"h6\" component=\"h2\">\n                            {title}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {post.frontmatter.date}\n                          </Typography>\n                          <Typography variant=\"body2\" component=\"p\">\n                            {description}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n              {!isFirst ? (\n                <Link to={prevPage} rel=\"prev\">\n                  ← Previous Page\n                </Link>\n              ) : <div></div>}\n              {!isLast && (\n                <Link to={nextPage} rel=\"next\">\n                  Next Page →\n                </Link>\n              )}\n            </Box>\n          </Grid>\n          <Grid item md={4} mt={10}>\n            <Box sx={{ position: 'sticky', top: '80px' }}>\n              <Bio />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n      <FooterBar />\n    </>\n  );\n};\n\nexport default BlogList;\n\nexport const Head = ({ pageContext }) => {\n  const { currentPage } = pageContext;\n  const title = currentPage === 1 ? 'All posts' : `Page ${currentPage}`;\n  return <Seo title={title} />;\n};\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }, skip: $skip, limit: $limit) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","React","BlogList","Head","Seo","title","Box","component","sx","display","justifyContent","alignItems","padding","backgroundColor","color","position","bottom","width","Typography","variant","Date","getFullYear","_ref","description","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","truncateText","text","maxLength","length","substring","data","pageContext","posts","allMarkdownRemark","nodes","currentPage","numPages","currentPageConverted","isFirst","isLast","prevPage","nextPage","HeaderBar","Container","maxWidth","pb","Grid","container","spacing","item","md","mt","map","post","frontmatter","fields","slug","excerpt","image","getImage","featuredImage","xs","sm","key","Card","height","flexDirection","CardActionArea","Link","to","GatsbyImage","alt","style","maxHeight","CardContent","date","rel","top","Bio","FooterBar","_ref2"],"sourceRoot":""}