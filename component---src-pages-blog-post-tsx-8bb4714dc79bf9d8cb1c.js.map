{"version":3,"file":"component---src-pages-blog-post-tsx-8bb4714dc79bf9d8cb1c.js","mappings":"8RA4CA,MAgEaA,EAA6CC,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQ,EAC3F,OACEC,EAAAA,cAACC,EAAAA,QAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UAzE2EC,IAAkE,IAA/DT,MAAM,SAAEU,EAAQ,KAAEC,EAAMV,eAAgBC,GAAM,SAAEU,GAAU,EACtI,OACET,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACU,EAAAA,QAAS,MACVV,EAAAA,cAACW,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,GAAI,KACjCd,EAAAA,cAACe,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACvBjB,EAAAA,cAACe,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,IAC5BrB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACsB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,GACjD1B,EAAKI,YAAYD,OAEpBF,EAAAA,cAACsB,EAAAA,EAAU,CAACC,QAAQ,YAAYG,MAAM,iBACnC3B,EAAKI,YAAYwB,OAGtB3B,EAAAA,cAAC4B,EAAAA,EAAG,CACFJ,UAAU,UACVK,wBAAyB,CAAEC,OAAQ/B,EAAKgC,MACxCC,SAAS,cACTnB,GAAI,CAAEQ,GAAI,KAEZrB,EAAAA,cAAAA,MAAAA,CAAKiC,UAAU,iBACbjC,EAAAA,cAAC4B,EAAAA,EAAG,CACFJ,UAAU,KACVX,GAAI,CACFqB,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,EACTjB,GAAI,IAGNrB,EAAAA,cAAC4B,EAAAA,EAAG,CAACJ,UAAU,MACZjB,GACCP,EAAAA,cAACuC,EAAAA,EAAM,CAACf,UAAWgB,EAAAA,KAAMC,GAAIlC,EAASmC,OAAOC,KAAMC,IAAI,QAAO,KACzDrC,EAASJ,YAAYD,QAI9BF,EAAAA,cAAC4B,EAAAA,EAAG,CAACJ,UAAU,MACZhB,GACCR,EAAAA,cAACuC,EAAAA,EAAM,CAACf,UAAWgB,EAAAA,KAAMC,GAAIjC,EAAKkC,OAAOC,KAAMC,IAAI,QAChDpC,EAAKL,YAAYD,MAAM,UAOpCF,EAAAA,cAACe,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,IAC5BrB,EAAAA,cAAC6C,EAAAA,QAAG,SAIV7C,EAAAA,cAAC8C,EAAAA,QAAS,MACT,C,gECzEP,UAvBkB,IAEd9C,EAAAA,cAAC4B,EAAAA,EAAG,CACFJ,UAAU,SACVX,GAAI,CACFqB,QAAS,OACTE,eAAgB,SAChBW,WAAY,SACZT,QAAS,EACTU,gBAAiB,QACjBtB,MAAO,QACPuB,SAAU,QACVC,OAAQ,EACRC,MAAO,SAGTnD,EAAAA,cAACsB,EAAAA,EAAU,CAACC,QAAQ,SAAQ,MACvB,IAAI6B,MAAOC,cAAc,kB,sDC4BpC,UAvCgC/C,IAAsC,cAArC,YAAEF,EAAW,MAAEF,EAAK,SAAEoD,GAAU,EAC/D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBrD,GAAemD,EAAKG,aAAatD,YACnDuD,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmB1D,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQ2D,EAAkBzD,EAAK,MAAMyD,EAAiBzD,GACtDF,EAAAA,cAAAA,OAAAA,CAAM6D,KAAK,cAAcC,QAASL,IAClCzD,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,WAAWD,QAAS5D,IACnCF,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,iBAAiBD,QAASL,IACzCzD,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,UAAUD,QAAQ,YACjC9D,EAAAA,cAAAA,OAAAA,CAAM6D,KAAK,eAAeC,QAAQ,YAClC9D,EAAAA,cAAAA,OAAAA,CACE6D,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKG,oBAAY,OAAQ,QAAR,EAAjBM,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7CnE,EAAAA,cAAAA,OAAAA,CAAM6D,KAAK,gBAAgBC,QAAS5D,IACpCF,EAAAA,cAAAA,OAAAA,CAAM6D,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/blog-post.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/FooterBar.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/seo.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, PageProps, graphql } from \"gatsby\"\n\nimport Bio from \"./pageComponent/bio\"\nimport Seo from \"./pageComponent/seo\"\n\nimport HeaderBar from \"./pageComponent/HeaderBar\";\nimport FooterBar from \"./pageComponent/FooterBar\";\nimport \"./pageComponent/prism.css\";\nimport { Box, Button, Container, Grid, Typography } from \"@mui/material\";\n\ninterface Frontmatter {\n  title: string\n  date: string\n  description?: string\n}\n\ninterface Fields {\n  slug: string\n}\n\ninterface MarkdownRemark {\n  html?: string\n  frontmatter: Frontmatter\n  excerpt?: string\n}\n\ninterface BlogPostTemplateQueryResult {\n  previous?: {\n    frontmatter: Frontmatter\n    fields: Fields\n  }\n  next?: {\n    frontmatter: Frontmatter\n    fields: Fields\n  }\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  markdownRemark: MarkdownRemark\n}\n\nconst BlogPostTemplate: React.FC<PageProps<BlogPostTemplateQueryResult>> = ({ data: { previous, next, markdownRemark: post }, location }) => {\n  return (\n    <>\n      <HeaderBar />\n      <Container maxWidth=\"lg\" sx={{ pb: 10 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8} mt={10}>\n            <header>\n              <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                {post.frontmatter.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {post.frontmatter.date}\n              </Typography>\n            </header>\n            <Box\n              component=\"section\"\n              dangerouslySetInnerHTML={{ __html: post.html as string }}\n              itemProp=\"articleBody\"\n              sx={{ mt: 3 }}\n            />\n            <nav className=\"blog-post-nav\">\n              <Box\n                component=\"ul\"\n                sx={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  justifyContent: 'space-between',\n                  listStyle: 'none',\n                  padding: 0,\n                  mt: 3,\n                }}\n              >\n                <Box component=\"li\">\n                  {previous && (\n                    <Button component={Link} to={previous.fields.slug} rel=\"prev\">\n                      ← {previous.frontmatter.title}\n                    </Button>\n                  )}\n                </Box>\n                <Box component=\"li\">\n                  {next && (\n                    <Button component={Link} to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Button>\n                  )}\n                </Box>\n              </Box>\n            </nav>\n          </Grid>\n          <Grid item xs={12} md={4} mt={10}>\n            <Bio />\n          </Grid>\n        </Grid>\n      </Container>\n      <FooterBar />\n    </>\n  );\n}\n\ninterface HeadQueryResult {\n  markdownRemark: MarkdownRemark\n}\n\nexport const Head: React.FC<PageProps<HeadQueryResult>> = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\nquery BlogPostBySlug(\n    $id: String\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst FooterBar = (): JSX.Element  => {\n  return (\n    <Box\n      component=\"footer\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 2,\n        backgroundColor: 'white',\n        color: 'black',\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n      }}\n    >\n      <Typography variant=\"body1\">\n        © {new Date().getFullYear()} createdby oda\n      </Typography>\n    </Box>\n  );\n};\n\nexport default FooterBar;\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// Define the types for the props\ninterface SeoProps {\n  description?: string\n  title: string\n  children?: React.ReactNode\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","previous","next","location","HeaderBar","Container","maxWidth","sx","pb","Grid","container","spacing","item","xs","md","mt","Typography","variant","component","gutterBottom","color","date","Box","dangerouslySetInnerHTML","__html","html","itemProp","className","display","flexWrap","justifyContent","listStyle","padding","Button","Link","to","fields","slug","rel","Bio","FooterBar","alignItems","backgroundColor","position","bottom","width","Date","getFullYear","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter"],"sourceRoot":""}