{"version":3,"file":"component---src-pages-index-tsx-d2212111b6a0e2d8bd0e.js","mappings":"kTAUA,MAAMA,EAAe,CAACC,EAAcC,IAC9BD,EAAKE,QAAUD,EACVD,EAEFA,EAAKG,UAAU,EAAGF,GAAa,MAsExC,UAnEkBG,IAA2B,IAA1B,KAAEC,GAAM,EAEzB,MAAMC,GAAQD,aAAI,EAAJA,EAAME,kBAAkBC,QAAuB,GAE7D,OADAC,QAAQC,IAAIL,GACS,IAAjBC,EAAMJ,OAENS,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,QAAG,MACJD,EAAAA,cAAAA,IAAAA,KAAG,8JAUPA,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACE,EAAAA,QAAS,MACVF,EAAAA,cAACG,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,GAAI,KACjCN,EAAAA,cAACO,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACvBT,EAAAA,cAACO,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpBZ,EAAAA,cAACO,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACtBd,EAAMkB,KAAKC,IACV,MAAMC,EAAQ3B,EAAa0B,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAAM,IACjEC,EAAc/B,EAAa0B,EAAKE,YAAYG,aAAeL,EAAKM,QAAS,KACzEC,GAAQC,EAAAA,EAAAA,GAASR,EAAKE,YAAYO,eACxC,OACEvB,EAAAA,cAACO,EAAAA,GAAI,CAACG,MAAI,EAACc,GAAI,GAAIC,GAAI,EAAGC,IAAKZ,EAAKG,OAAOC,MACzClB,EAAAA,cAAC2B,EAAAA,EAAI,CAACtB,GAAI,CAAEuB,OAAQ,OAAQC,QAAS,OAAQC,cAAe,WAC1D9B,EAAAA,cAAC+B,EAAAA,EAAc,CAACC,UAAWC,EAAAA,KAAMC,GAAIpB,EAAKG,OAAOC,MAC9CG,GACCrB,EAAAA,cAACmC,EAAAA,EAAW,CACVd,MAAOA,EACPe,IAAKtB,EAAKE,YAAYD,MACtBsB,MAAO,CAAEC,UAAW,OAGxBtC,EAAAA,cAACuC,EAAAA,EAAW,KACVvC,EAAAA,cAACwC,EAAAA,EAAU,CAACC,QAAQ,KAAKT,UAAU,MAChCjB,GAEHf,EAAAA,cAACwC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,kBAC/B5B,EAAKE,YAAY2B,MAEpB3C,EAAAA,cAACwC,EAAAA,EAAU,CAACC,QAAQ,QAAQT,UAAU,KACnCb,MAKJ,MAKfnB,EAAAA,cAACO,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpBZ,EAAAA,cAACC,EAAAA,QAAG,SAIVD,EAAAA,cAAC4C,EAAAA,QAAS,MACT,EAWA,MAAMC,EAAO,IAAkB7C,EAAAA,cAAC8C,EAAAA,QAAG,CAAC/B,MAAM,a,gEChEjD,UAvBkB,IAEdf,EAAAA,cAAC+C,EAAAA,EAAG,CACFf,UAAU,SACV3B,GAAI,CACFwB,QAAS,OACTmB,eAAgB,SAChBC,WAAY,SACZC,QAAS,EACTC,gBAAiB,QACjBT,MAAO,QACPU,SAAU,QACVC,OAAQ,EACRC,MAAO,SAGTtD,EAAAA,cAACwC,EAAAA,EAAU,CAACC,QAAQ,SAAQ,MACvB,IAAIc,MAAOC,cAAc,kB,sDC4BpC,UAvCgC/D,IAAsC,cAArC,YAAE0B,EAAW,MAAEJ,EAAK,SAAE0C,GAAU,EAC/D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBzC,GAAeuC,EAAKG,aAAa1C,YACnD2C,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmBhD,MAExC,OACEf,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQ8D,EAAkB/C,EAAK,MAAM+C,EAAiB/C,GACtDf,EAAAA,cAAAA,OAAAA,CAAMgE,KAAK,cAAcC,QAASL,IAClC5D,EAAAA,cAAAA,OAAAA,CAAMkE,SAAS,WAAWD,QAASlD,IACnCf,EAAAA,cAAAA,OAAAA,CAAMkE,SAAS,iBAAiBD,QAASL,IACzC5D,EAAAA,cAAAA,OAAAA,CAAMkE,SAAS,UAAUD,QAAQ,YACjCjE,EAAAA,cAAAA,OAAAA,CAAMgE,KAAK,eAAeC,QAAQ,YAClCjE,EAAAA,cAAAA,OAAAA,CACEgE,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKG,oBAAY,OAAQ,QAAR,EAAjBM,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7CtE,EAAAA,cAAAA,OAAAA,CAAMgE,KAAK,gBAAgBC,QAASlD,IACpCf,EAAAA,cAAAA,OAAAA,CAAMgE,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/FooterBar.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/seo.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"./pageComponent/bio\"\nimport Seo from \"./pageComponent/seo\"\nimport HeaderBar from \"./pageComponent/HeaderBar\"\nimport { Card, CardActionArea, CardContent, Container, Grid, Typography } from \"@mui/material\"\nimport FooterBar from \"./pageComponent/FooterBar\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) {\n    return text\n  }\n  return text.substring(0, maxLength) + '...'\n}\n\nconst BlogIndex = ({ data }): JSX.Element => {\n  // eslint-disable-next-line react/prop-types\n  const posts = data?.allMarkdownRemark.nodes as Array<any> || [];\n  console.log(data)\n  if (posts.length === 0) {\n    return (\n      <>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <HeaderBar />\n      <Container maxWidth=\"lg\" sx={{ pb: 10 }}>\n        <Grid container spacing={3}>\n          <Grid item md={8} mt={10}>\n            <Grid container spacing={3}>\n              {posts.map((post: any) => {\n                const title = truncateText(post.frontmatter.title || post.fields.slug, 50)\n                const description = truncateText(post.frontmatter.description || post.excerpt, 100)\n                const image = getImage(post.frontmatter.featuredImage)\n                return (\n                  <Grid item xs={12} sm={6} key={post.fields.slug}>\n                    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                      <CardActionArea component={Link} to={post.fields.slug}>\n                        {image && (\n                          <GatsbyImage\n                            image={image}\n                            alt={post.frontmatter.title}\n                            style={{ maxHeight: 200 }}\n                          />\n                        )}\n                        <CardContent>\n                          <Typography variant=\"h6\" component=\"h2\">\n                            {title}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {post.frontmatter.date}\n                          </Typography>\n                          <Typography variant=\"body2\" component=\"p\">\n                            {description}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                )\n              })}\n            </Grid>\n          </Grid>\n          <Grid item md={4} mt={10}>\n            <Bio />\n          </Grid>\n        </Grid>\n      </Container>\n      <FooterBar />\n    </>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = ():JSX.Element => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst FooterBar = (): JSX.Element  => {\n  return (\n    <Box\n      component=\"footer\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 2,\n        backgroundColor: 'white',\n        color: 'black',\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n      }}\n    >\n      <Typography variant=\"body1\">\n        Â© {new Date().getFullYear()} createdby oda\n      </Typography>\n    </Box>\n  );\n};\n\nexport default FooterBar;\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// Define the types for the props\ninterface SeoProps {\n  description?: string\n  title: string\n  children?: React.ReactNode\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["truncateText","text","maxLength","length","substring","_ref","data","posts","allMarkdownRemark","nodes","console","log","React","Bio","HeaderBar","Container","maxWidth","sx","pb","Grid","container","spacing","item","md","mt","map","post","title","frontmatter","fields","slug","description","excerpt","image","getImage","featuredImage","xs","sm","key","Card","height","display","flexDirection","CardActionArea","component","Link","to","GatsbyImage","alt","style","maxHeight","CardContent","Typography","variant","color","date","FooterBar","Head","Seo","Box","justifyContent","alignItems","padding","backgroundColor","position","bottom","width","Date","getFullYear","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter"],"sourceRoot":""}