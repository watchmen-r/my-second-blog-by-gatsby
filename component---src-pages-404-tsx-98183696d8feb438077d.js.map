{"version":3,"file":"component---src-pages-404-tsx-98183696d8feb438077d.js","mappings":"qMAIA,MAUaA,EAAO,IAAmBC,EAAAA,cAACC,EAAAA,QAAG,CAACC,MAAM,mBAElD,UAZqB,IAGjBF,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,kBACJA,EAAAA,cAAAA,IAAAA,KAAG,2D,sDCwCT,UAvCgCG,IAAsC,cAArC,YAAEC,EAAW,MAAEF,EAAK,SAAEG,GAAU,EAC/D,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmBT,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQU,EAAkBR,EAAK,MAAMQ,EAAiBR,GACtDF,EAAAA,cAAAA,OAAAA,CAAMY,KAAK,cAAcC,QAASL,IAClCR,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,WAAWD,QAASX,IACnCF,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,iBAAiBD,QAASL,IACzCR,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,UAAUD,QAAQ,YACjCb,EAAAA,cAAAA,OAAAA,CAAMY,KAAK,eAAeC,QAAQ,YAClCb,EAAAA,cAAAA,OAAAA,CACEY,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKG,oBAAY,OAAQ,QAAR,EAAjBM,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7ClB,EAAAA,cAAAA,OAAAA,CAAMY,KAAK,gBAAgBC,QAASX,IACpCF,EAAAA,cAAAA,OAAAA,CAAMY,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/404.tsx","webpack://gatsby-starter-blog/./src/pages/pageComponent/seo.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Seo from \"./pageComponent/seo\"\n\nconst NotFoundPage = (): JSX.Element => {\n\n  return (\n    <>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn't exist... the sadness.</p>\n    </>\n  )\n}\n\nexport const Head = (): JSX.Element => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// Define the types for the props\ninterface SeoProps {\n  description?: string\n  title: string\n  children?: React.ReactNode\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","description","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter"],"sourceRoot":""}